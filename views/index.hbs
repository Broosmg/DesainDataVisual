<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.css">
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.min.css">
  <title>{{ title }}</title>
</head>
<body style="background-color: #e3f2fd;">
  <nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
      <a class="navbar-brand" href="#dashboard">{{ title }}</a>

      <ul class="navbar-nav me-auto nav nav-underline">
        <li class="nav-item">
          <a id="map-link" class="nav-link" href="#map" data-bs-toggle="tooltip" data-bs-title="Klik 2x untuk halaman penuh">Map</a>
        </li>
      </ul>
    </div>
  </nav>

  <div id="dashboard" class="container grid">
    <div class="col py-2">
      <div class="card rounded-4 shadow border-0">
        <div id="covid-chart" class="card-body">
          <h5 class="card-title">Statistik Covid-19 Tahun <input type="number" class="border-0 border-bottom"></h5>
          <canvas height="80"></canvas>
        </div>
      </div>
    </div>

    <div class="col py-2">
      <div class="card rounded-4 shadow border-0">
        <div id="dbd-chart" class="card-body">
          <h5 class="card-title">Statistik DBD Tahun <input type="number" class="border-0 border-bottom"></h5>
          <canvas height="80"></canvas>
        </div>
      </div>
    </div>

    <div class="col py-2">
      <div class="card rounded-4 shadow border-0">
        <div id="stunting-chart" class="card-body">
          <h5 class="card-title">Statistik Stunting Tahun <input type="number" class="border-0 border-bottom"></h5>
          <canvas height="80"></canvas>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-6 py-4">
        <div class="card rounded-4 shadow border-0">
          <div class="card-body">
            <h5 class="card-title">Urutan kota paling banyak terdampak terdampak Covid-19</h5>

            <table id="covid-table" class="table">
              <thead>
                <tr>
                  <th scope="col">No</th>
                  <th scope="col">Nama Kota</th>
                  <th scope="col" style="text-align: end;">Jumlah</th>
                </tr>
              </thead>
            </table>
          </div>
        </div>
      </div>

      <div class="col-lg-6 py-4">
        <div class="card rounded-4 shadow border-0">
          <div class="card-body">
            <h5 class="card-title">Urutan kota paling banyak terdampak terdampak DBD</h5>

            <table id="dbd-table" class="table">
              <thead>
                <tr>
                  <th scope="col">No</th>
                  <th scope="col">Nama Kota</th>
                  <th scope="col" style="text-align: end;">Jumlah</th>
                </tr>
              </thead>
            </table>
          </div>
        </div>
      </div>
    </div>

    <div class="col py-2">
      <div class="card rounded-4 shadow border-0">
        <div class="card-body">
          <h5 class="card-title">Urutan kota paling banyak terdampak terdampak Stunting</h5>

          <table id="stunting-table" class="table">
            <thead>
              <tr>
                <th scope="col">No</th>
                <th scope="col">Nama Kota</th>
                <th scope="col" style="text-align: end;">Jumlah</th>
              </tr>
            </thead>
          </table>
        </div>
      </div>
    </div>
  </div>

  <div id="map" class="d-none">
    <iframe src="/map" style="height: calc(100vh - 64px); width: 100%;"></iframe>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <script src="https://code.jquery.com/jquery-3.6.4.min.js" integrity="sha256-oP6HI9z1XaZNBrJURtCoUT5SUnxFr8s3BzRl+cbzUq8=" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    $(document).ready(function () {
      const header = {
        'x-api-key': 'YXVsaWFpbm92YXNpQDEyMw=='
      };
      let canvas = {
        '#covid-chart': null,
        '#dbd-chart': null,
        '#stunting-chart': null
      };

      tabView(window.location.hash);
      getDataCity(31);

      $(window).on('hashchange', function(e){
        tabView(window.location.hash);
      });

      $('#map-link').on('dblclick', function () {
        window.open('/map');
      });

      function tabView(hash) {
        switch (hash) {
          case '#map':
            $('#dashboard').addClass('d-none');
            $('#map').removeClass('d-none');
            $('#map-link').addClass('active');
            break;

          default:
            $('#dashboard').removeClass('d-none');
            $('#map').addClass('d-none');
            $('#map-link').removeClass('active');
            break;
        }
      }

      $('input[type=number]').val(new Date().getFullYear());
      refreshCovid();
      refreshDbd();
      refreshStunting();

      $('#covid-chart').find('input').change(function () {
        refreshCovid();
      });

      $('#dbd-chart').find('input').change(function () {
        refreshDbd();
      });
      $('#stunting-chart').find('input').change(function () {
        refreshStunting();
      });

      function refreshCovid() {
        getDataChart('e089ad6b-e03e-4ab5-8c6a-5ce65455e713', '#covid-chart', 'bar', $('#covid-chart').find('input').val());
        getDataCityTop('e089ad6b-e03e-4ab5-8c6a-5ce65455e713', '#covid-table', $('#covid-chart').find('input').val());
      }

      function refreshDbd() {
        getDataChart('273ae965-761e-446e-b11c-310df7783a8a', '#dbd-chart', 'bar', $('#dbd-chart').find('input').val());
        getDataCityTop('273ae965-761e-446e-b11c-310df7783a8a', '#dbd-table', $('#dbd-chart').find('input').val());
      }

      function refreshStunting() {
        getDataChart('625b981a-09ea-4328-bd2c-4295df14e932', '#stunting-chart', 'bar', $('#stunting-chart').find('input').val());
        getDataCityTop('625b981a-09ea-4328-bd2c-4295df14e932', '#stunting-table', $('#stunting-chart').find('input').val());
      }

      function generateRandomColor() {
        const red = Math.floor(Math.random() * 256);
        const green = Math.floor(Math.random() * 256);
        const blue = Math.floor(Math.random() * 256);

        return `rgb(${red}, ${green}, ${blue})`;
      }

      function getDataChart(outbreakCategoryId, elementId, chartType, year) {
        const months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
        const query = `query Chart {
          chart(outbreakCategoryId: "${outbreakCategoryId}", year: "${year}") {
            month
            affected
          }
        }`;

        $.ajax({
          url: '/graphql',
          method: 'POST',
          contentType: 'application/json',
          headers: header,
          data: JSON.stringify({ query: query }),
          success: function (data) {
            const chartDatas = [];

            $(elementId).find('input').val(year);

            for (let index = 0; index < 12; index++) {
              let chartData = data.data.chart.find(value => (value.month - 1) == index);

              if (!chartData) {
                chartData = {
                  month: 2,
                  affected: 0
                };
              }

              chartDatas.push(chartData);
            }

            generateChart(chartDatas, elementId, chartType, months, "Bulan");
          }
        });
      }

      function generateChart(data, elementId, chartType, labels, label) {
        const isPie = chartType == 'pie';
        const chartData = data.map(value => value.affected);
        const chartBackgroundColor = isPie ? data.map(value => generateRandomColor()) : "rgb(173, 216, 230)"

        if (canvas && canvas[elementId]) {
          canvas[elementId].data.labels = labels;
          canvas[elementId].data.datasets[0].data = chartData;
          canvas[elementId].data.datasets[0].backgroundColor = chartBackgroundColor;

          canvas[elementId].update();
          return;
        }

        canvas[elementId] = new Chart($(elementId).find('canvas')[0].getContext('2d'), {
          type: chartType,
          data: {
            labels: labels,
            datasets: [
              {
                label: label,
                data: chartData,
                backgroundColor: chartBackgroundColor
              }
            ]
          },
          options: chartType == 'pie' ? getPieOptions() : getTableOptions()
        });
      }

      function getTableOptions() {
        return {
          scales: {
            x: {
              title: {
                display: true,
                text: 'Bulan'
              }
            },
            y: {
              title: {
                display: true,
                text: 'Kasus Aktif'
              }
            }
          }
        };
      }

      function getPieOptions() {
        return {
          tooltips: {
            enabled: false
          },
          plugins: {
            datalabels: {
              color: '#fff',
              formatter: function (value, context) {
                return context.chart.data.labels[context.dataIndex];
              },
            }
          }
        };
      }

      function getDataCity(provinceId) {
        const query = `query City {
          cities(provinceId: "${provinceId}") {
            name
          }
        }`;

        $.ajax({
          url: '/graphql',
          method: 'POST',
          contentType: 'application/json',
          headers: header,
          data: JSON.stringify({ query: query }),
          success: function (data) {
            cities = data.data.cities.map(value => value.name);
          }
        });
      }

      function getDataPie(outbreakCategoryId, elementId, year) {
        const query = `query CityTop {
          cityTop(outbreakCategoryId: "${outbreakCategoryId}", year: "${year}", limit: 6) {
            cityName
            affected
          }
        }`;

        $.ajax({
          url: '/graphql',
          method: 'POST',
          contentType: 'application/json',
          headers: header,
          data: JSON.stringify({ query: query }),
          success: function (data) {
            const cities = data.data.cityTop.map(value => value.cityName)

            generateChart(data.data.cityTop, elementId, 'pie', cities, 'Kota');
          }
        });
      }

      function getDataCityTop(outbreakCategoryId, elementId, year) {
        const query = `query CityTop {
          cityTop(outbreakCategoryId: "${outbreakCategoryId}", year: "${year}", limit: 6) {
            cityName
            affected
          }
        }`;

        $.ajax({
          url: '/graphql',
          method: 'POST',
          contentType: 'application/json',
          headers: header,
          data: JSON.stringify({ query: query }),
          success: function (data) {
            generateTable(data.data.cityTop, elementId);
          }
        });
      }

      function generateTable(data, elementId) {
        const tableBody = $("<tbody>");

        $(elementId).find("tbody").empty();

        for (let index = 0; index < data.length; index++) {
          const element = data[index];
          const tableRow = $("<tr>");

          tableRow.append(`<td>${index + 1}</td>`);
          tableRow.append(`<td>${element.cityName}</td>`);
          tableRow.append(`<td style="text-align: end;">${formatNumberWithCommas(element.affected)}</td>`);
          tableBody.append(tableRow);
        }

        $(elementId).append(tableBody);
      }

      function formatNumberWithCommas(input) {
        return parseInt(input, 10).toLocaleString().replaceAll(',', '.');
      }
    });

    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    });
  </script>
</body>
</html>